{"version":3,"sources":["components/Navbar.tsx","pages/AboutPage.tsx","components/TodoForm.tsx","components/TodoList.tsx","pages/TodosPage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","href","to","AboutPage","history","useHistory","onClick","push","ToDoForm","props","useState","title","setTitle","value","onChange","event","target","type","id","placeholder","onKeyPress","key","onAdd","htmlFor","TodoList","todos","onToggle","onRemove","length","map","todo","classes","completed","join","checked","bind","preventDefault","removHandler","TodosPage","setTodos","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","Date","now","prev","confirm","filter","App","component","path","exact","ReactDOM","render","document","getElementById"],"mappings":"gNAGaA,EAAmB,kBAC9B,8BACE,sBAAKC,UAAU,wBAAf,UACE,mBAAGC,KAAK,IAAID,UAAU,aAAtB,wBAGA,qBAAIA,UAAU,6BAAd,UACE,6BACE,cAAC,IAAD,CAASE,GAAG,mBAAZ,oBAEF,6BACE,cAAC,IAAD,CAASA,GAAG,SAAZ,6BCXGC,EAAsB,WACjC,IAAMC,EAAUC,cAChB,OACE,qCACE,6CACA,4FACA,wBAAQL,UAAU,MAAMM,QAAS,kBAAMF,EAAQG,KAAK,MAApD,sB,gBCHOC,EAAoC,SAACC,GAAW,IAAD,EAChCC,mBAAiB,IADe,mBACnDC,EADmD,KAC5CC,EAD4C,KAc1D,OACE,sBAAKZ,UAAU,kBAAf,UACE,uBACEa,MAAOF,EACPG,SAfgB,SAACC,GACrBH,EAASG,EAAMC,OAAOH,QAelBI,KAAK,OACLC,GAAG,QACHC,YAAY,cACZC,WAfkB,SAACL,GACL,UAAdA,EAAMM,MACRZ,EAAMa,MAAMX,GACZC,EAAS,QAcT,uBAAOW,QAAQ,QAAQvB,UAAU,SAAjC,6BCrBOwB,EAAoC,SAAC,GAI3C,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACAC,EACI,EADJA,SAEA,GAAqB,IAAjBF,EAAMG,OACR,OAAO,mBAAG5B,UAAU,SAAb,oCAOT,OACE,6BACGyB,EAAMI,KAAI,SAACC,GACV,IAAMC,EAAU,CAAC,QAKjB,OAHID,EAAKE,WACPD,EAAQxB,KAAK,aAGb,oBAAIP,UAAW+B,EAAQE,KAAK,KAA5B,SACE,kCACE,uBACEhB,KAAK,WACLiB,QAASJ,EAAKE,UACdlB,SAAUY,EAASS,KAAK,KAAML,EAAKZ,MAErC,+BAAOY,EAAKnB,QACZ,mBACEX,UAAU,0BACVM,QAAS,SAACS,GAAD,OAvBF,SAACA,EAAyBG,GAC7CH,EAAMqB,iBACNT,EAAST,GAqBuBmB,CAAatB,EAAOe,EAAKZ,KAF/C,wBARmCY,EAAKZ,UCxBzCoB,EAAsB,WAAO,IAAD,EACb5B,mBAAkB,IADL,mBAChCe,EADgC,KACzBc,EADyB,KAGvCC,qBAAU,WACR,IAAMC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,MAE1DN,EAASE,KACR,IAEHD,qBAAU,WACRI,aAAaE,QAAQ,QAASJ,KAAKK,UAAUtB,MAC5C,CAACA,IA4BJ,OACE,qCACE,cAAC,EAAD,CAAUH,MA5BK,SAACX,GAClB,IAAMqC,EAAiB,CACrBrC,MAAOA,EACPO,GAAI+B,KAAKC,MACTlB,WAAW,GAEbO,GAAS,SAACY,GAAD,OAAWH,GAAX,mBAAuBG,UAwB9B,cAAC,EAAD,CACE1B,MAAOA,EACPC,SAvBgB,SAACR,GACrBqB,GAAS,SAACY,GAAD,OACPA,EAAKtB,KAAI,SAACC,GAIR,OAHIA,EAAKZ,KAAOA,IACdY,EAAKE,WAAaF,EAAKE,WAElBF,SAkBPH,SAbgB,SAACT,GACAkC,QAAQ,qCAE3Bb,GAAS,SAACY,GAAD,OAAUA,EAAKE,QAAO,SAACvB,GAAD,OAAUA,EAAKZ,KAAOA,eCvB5CoC,EAdO,WACpB,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,qBAAKtD,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuD,UAAWjB,EAAWkB,KAAK,mBAAmBC,OAAK,IAC1D,cAAC,IAAD,CAAOF,UAAWpD,EAAWqD,KAAK,oBCT5CE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8a1f9f70.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const Navbar: React.FC = () => (\r\n  <nav>\r\n    <div className=\"nav-wrapper black px1\">\r\n      <a href=\"/\" className=\"brand-logo\">\r\n        Typescript\r\n      </a>\r\n      <ul className=\"right hide-on-med-and-down\">\r\n        <li>\r\n          <NavLink to=\"/todo-typescript\">ToDo</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/about\">Info</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n);\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const AboutPage: React.FC = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <h1>Information</h1>\r\n      <p>At vero eos et accusamus et iusto odio dignissimos ducimus.</p>\r\n      <button className=\"btn\" onClick={() => history.push(\"/\")}>\r\n        Back\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\ninterface TodoFormProps {\r\n  onAdd(title: string): void;\r\n}\r\n\r\nexport const ToDoForm: React.FC<TodoFormProps> = (props) => {\r\n  const [title, setTitle] = useState<string>(\"\");\r\n\r\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const KeyPressHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key === \"Enter\") {\r\n      props.onAdd(title);\r\n      setTitle(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-field mt2\">\r\n      <input\r\n        value={title}\r\n        onChange={changeHandler}\r\n        type=\"text\"\r\n        id=\"title\"\r\n        placeholder=\"Enter title\"\r\n        onKeyPress={KeyPressHandler}\r\n      />\r\n      <label htmlFor=\"title\" className=\"active\">\r\n        Enter title\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ITodo } from \"../interfaces\";\r\n\r\ntype TodoListProps = {\r\n  todos: ITodo[];\r\n  onToggle(id: number): void;\r\n  onRemove(id: number): void;\r\n};\r\n\r\nexport const TodoList: React.FC<TodoListProps> = ({\r\n  todos,\r\n  onToggle,\r\n  onRemove,\r\n}) => {\r\n  if (todos.length === 0) {\r\n    return <p className=\"center\">Create your first todo</p>;\r\n  }\r\n\r\n  const removHandler = (event: React.MouseEvent, id: number) => {\r\n    event.preventDefault();\r\n    onRemove(id);\r\n  };\r\n  return (\r\n    <ul>\r\n      {todos.map((todo) => {\r\n        const classes = [\"todo\"];\r\n\r\n        if (todo.completed) {\r\n          classes.push(\"complited\");\r\n        }\r\n        return (\r\n          <li className={classes.join(\" \")} key={todo.id}>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={todo.completed}\r\n                onChange={onToggle.bind(null, todo.id)}\r\n              />\r\n              <span>{todo.title}</span>\r\n              <i\r\n                className=\"material-icons red-text\"\r\n                onClick={(event) => removHandler(event, todo.id)}\r\n              >\r\n                delete\r\n              </i>\r\n            </label>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ITodo } from \"./../interfaces\";\r\nimport { ToDoForm } from \"./../components/TodoForm\";\r\nimport { TodoList } from \"./../components/TodoList\";\r\n\r\ndeclare var confirm: (question: string) => boolean;\r\n\r\nexport const TodosPage: React.FC = () => {\r\n  const [todos, setTodos] = useState<ITodo[]>([]);\r\n\r\n  useEffect(() => {\r\n    const saved = JSON.parse(localStorage.getItem(\"todos\") || \"[]\") as ITodo[];\r\n\r\n    setTodos(saved);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const addHandler = (title: string) => {\r\n    const newTodo: ITodo = {\r\n      title: title,\r\n      id: Date.now(),\r\n      completed: false,\r\n    };\r\n    setTodos((prev) => [newTodo, ...prev]);\r\n  };\r\n\r\n  const toggleHandler = (id: number) => {\r\n    setTodos((prev) =>\r\n      prev.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeHandler = (id: number) => {\r\n    const shouldRemove = confirm(\"Are you sure you want to remove?\");\r\n    if (shouldRemove) {\r\n      setTodos((prev) => prev.filter((todo) => todo.id !== id));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <ToDoForm onAdd={addHandler} />\r\n\r\n      <TodoList\r\n        todos={todos}\r\n        onToggle={toggleHandler}\r\n        onRemove={removeHandler}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Navbar } from \"./components/Navbar\";\nimport { AboutPage } from \"./pages/AboutPage\";\nimport { TodosPage } from \"./pages/TodosPage\";\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <div className=\"container\">\n        <Switch>\n          <Route component={TodosPage} path=\"/todo-typescript\" exact />\n          <Route component={AboutPage} path=\"/about\" />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}